@import '../Variables/variables';

/* height px */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:h-[#{$i}px]'] {
      @media (min-width: $key) {
        height: #{$i}px;
      }
    }
  }
}

/* height % */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:h-[#{$i}%]'] {
      @media (min-width: $key) {
        height: #{$i}#{$percentage};
      }
    }
  }
}

/* width px */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:w-[#{$i}px]'] {
      @media (min-width: $key) {
        width: #{$i}px;
      }
    }
  }
}

/* width % */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:w-[#{$i}%]'] {
      @media (min-width: $key) {
        width: #{$i}#{$percentage};
      }
    }
  }
}

/* create a class with max-w-[valuepx] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:max-w-[#{$i}px]'] {
      @media (min-width: $key) {
        max-width: #{$i}px;
      }
    }
  }
}

/* create a class with max-w-[value%] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:max-w-[#{$i}%]'] {
      @media (min-width: $key) {
        max-width: #{$i}#{$percentage};
      }
    }
  }
}

/* create a class with max-h-[value%] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:max-h-[#{$i}%]'] {
      @media (min-width: $key) {
        max-height: #{$i}#{$percentage};
      }
    }
  }
}

/* create a class with max-h-[valuepx] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:max-h-[#{$i}%]'] {
      @media (min-width: $key) {
        max-height: #{$i}px;
      }
    }
  }
}

/* create a class with min-w-[valuepx] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:min-w-[#{$i}px]'] {
      @media (min-width: $key) {
        min-width: #{$i}px;
      }
    }
  }
}

/* create a class with min-w-[value%] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:min-w-[#{$i}%]'] {
      @media (min-width: $key) {
        min-width: #{$i}#{$percentage};
      }
    }
  }
}

/* create a class with min-h-[valuepx] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:min-h-[#{$i}px]'] {
      @media (min-width: $key) {
        min-height: #{$i}px;
      }
    }
  }
}

/* create a class with max-h-[value%] */
@each $property, $key in $breakpoints {
  @for $i from 1 through 2000 {
    [class~='#{$property}:min-h-[#{$i}%]'] {
      @media (min-width: $key) {
        min-height: #{$i}#{$percentage};
      }
    }
  }
}

/* position */
@each $property1, $key1 in $breakpoints {
  @each $property, $key in $position {
    [class~='#{$property1}:#{$property}'] {
      @media (min-width: $key1) {
        position: #{$property};
      }
    }
  }
}

/* justify content */
@each $property1, $key1 in $breakpoints {
  @each $property, $key in $justify {
    [class~='#{$property1}:#{$property}'] {
      @media (min-width: $key1) {
        justify-content: #{$key};
      }
    }
  }
}

/* items */
@each $property1, $key1 in $breakpoints {
  @each $property, $key in $items {
    [class~='#{$property1}:#{$property}'] {
      @media (min-width: $key1) {
        align-items: #{$key};
      }
    }
  }
}

/* font size */
@each $property1, $key1 in $breakpoints {
  @each $property, $key in $font-size {
    $prefix: map-get($key, 'prefix');
    $values: map-get($key, 'values');

    @each $value, $key in $values {
      [class~='#{$property1}:font-#{$prefix}-#{$value}'] {
        @media (min-width: $key1) {
          font-size: #{$key};
        }
      }
    }
  }
}

/* create a class with font-[valuepx] */
@each $property1, $key1 in $breakpoints {
  @for $i from 1 through 100 {
    [class~='#{$property1}:font-[#{$i}px]'] {
      @media (min-width: $key1) {
        font-size: #{$i}px;
      }
    }
  }
}

/* create a class with font-[valuerem] */
@each $property1, $key1 in $breakpoints {
  @for $i from 1 through 20 {
    [class~='#{$property1}:font-[#{$i}rem]'] {
      @media (min-width: $key1) {
        font-size: #{$i}rem;
      }
    }
  }
}

/* create padding */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $padding {
    .#{$property} {
      @media (min-width: $key1) {
        padding: #{$value};
      }
    }
  }
}

/* create padding x */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $paddingX {
    .#{$property} {
      @media (min-width: $key1) {
        padding-left: #{$value};
        padding-right: #{$value};
      }
    }
  }
}

/* create padding y */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $paddingY {
    .#{$property} {
      @media (min-width: $key1) {
        padding-top: #{$value};
        padding-bottom: #{$value};
      }
    }
  }
}

/* create padding t */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $paddingT {
    .#{$property} {
      @media (min-width: $key1) {
        padding-top: #{$value};
      }
    }
  }
}

/* create padding r */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $paddingR {
    .#{$property} {
      @media (min-width: $key1) {
        padding-right: #{$value};
      }
    }
  }
}

/* create padding b */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $paddingB {
    @media (min-width: $key1) {
      padding-bottom: #{$value};
    }
  }
}

/* create padding l */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $paddingL {
    .#{$property} {
      @media (min-width: $key1) {
        padding-left: #{$value};
      }
    }
  }
}

/* create margin */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $margin {
    .#{$property} {
      @media (min-width: $key1) {
        margin: #{$value};
      }
    }
  }
}

/* create margin x */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $marginX {
    .#{$property} {
      @media (min-width: $key1) {
        margin-left: #{$value};
        margin-right: #{$value};
      }
    }
  }
}

/* create margin y */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $marginY {
    .#{$property} {
      @media (min-width: $key1) {
        margin-top: #{$value};
        margin-bottom: #{$value};
      }
    }
  }
}

/* create margin t */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $marginT {
    .#{$property} {
      @media (min-width: $key1) {
        margin-top: #{$value};
      }
    }
  }
}

/* create margin r */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $marginR {
    .#{$property} {
      @media (min-width: $key1) {
        margin-right: #{$value};
      }
    }
  }
}

/* create margin b */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $marginB {
    .#{$property} {
      @media (min-width: $key1) {
        margin-bottom: #{$value};
      }
    }
  }
}

/* create margin l */
@each $property1, $key1 in $breakpoints {
  @each $property, $value in $marginL {
    .#{$property} {
      margin-bottom: #{$value};
    }
  }
}
